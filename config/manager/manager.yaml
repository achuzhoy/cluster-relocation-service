apiVersion: v1
kind: Namespace
metadata:
  name: cluster-relocation
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cluster-relocation-service
  namespace: cluster-relocation
  labels:
    app: cluster-relocation
spec:
  selector:
    matchLabels:
      app: cluster-relocation
  replicas: 1
  template:
    metadata:
      labels:
        app: cluster-relocation
    spec:
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
      - command:
        - /manager
        args:
        - --leader-elect
        image: quay.io/carbonin/cluster-relocation-service:latest
        name: manager
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - "ALL"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
      - command:
        - /server
        image: quay.io/carbonin/cluster-relocation-service:latest
        name: server
        ports:
        - name: config-server
          containerPort: 8000
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - "ALL"
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: cluster-relocation-config
  namespace: cluster-relocation
spec:
  to:
    kind: Service
    name: cluster-relocation-config
  port:
    targetPort: config-server
---
apiVersion: v1
kind: Service
metadata:
  name: cluster-relocation-config
  namespace: cluster-relocation
spec:
  ports:
  - port: 8000
    protocol: TCP
    name: config-server
  selector:
    app: cluster-relocation
